
// Generated by Cadence Genus(TM) Synthesis Solution 19.10-p002_1
// Generated on: May 24 2022 21:09:23 MSK (May 24 2022 18:09:23 UTC)

// Verification Directory fv/commutator 

module commutator(inputs, control, clk, outputs);
  input [7:0] inputs;
  input [2:0] control, clk;
  output [2:0] outputs;
  wire [7:0] inputs;
  wire [2:0] control, clk;
  wire [2:0] outputs;
  wire [8:0] mem_out;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2,
       UNCONNECTED3, UNCONNECTED4, UNCONNECTED5, UNCONNECTED6;
  wire UNCONNECTED7, n_0, n_1, n_2, n_3, n_4, n_5;
  MX2X1 g752(.A (n_0), .B (n_2), .S0 (mem_out[8]), .Y (outputs[2]));
  MX2X1 g753(.A (n_3), .B (n_5), .S0 (mem_out[5]), .Y (outputs[1]));
  MX2X1 g754(.A (n_4), .B (n_1), .S0 (mem_out[1]), .Y (outputs[0]));
  MX4XL g756(.A (inputs[1]), .B (inputs[5]), .C (inputs[3]), .D
       (inputs[7]), .S0 (mem_out[3]), .S1 (mem_out[4]), .Y (n_5));
  MX4XL g757(.A (inputs[0]), .B (inputs[1]), .C (inputs[4]), .D
       (inputs[5]), .S0 (mem_out[2]), .S1 (mem_out[0]), .Y (n_4));
  MX4XL g759(.A (inputs[0]), .B (inputs[4]), .C (inputs[2]), .D
       (inputs[6]), .S0 (mem_out[3]), .S1 (mem_out[4]), .Y (n_3));
  MX4XL g755(.A (inputs[1]), .B (inputs[5]), .C (inputs[3]), .D
       (inputs[7]), .S0 (mem_out[6]), .S1 (mem_out[7]), .Y (n_2));
  MX4XL g760(.A (inputs[2]), .B (inputs[6]), .C (inputs[3]), .D
       (inputs[7]), .S0 (mem_out[0]), .S1 (mem_out[2]), .Y (n_1));
  MX4XL g758(.A (inputs[0]), .B (inputs[2]), .C (inputs[4]), .D
       (inputs[6]), .S0 (mem_out[7]), .S1 (mem_out[6]), .Y (n_0));
  TLATX1 dd0_dd0_dd1_q_reg(.G (clk[0]), .D (control[1]), .Q
       (mem_out[1]), .QN (UNCONNECTED));
  TLATX1 dd0_dd1_dd2_q_reg(.G (clk[1]), .D (control[2]), .Q
       (mem_out[5]), .QN (UNCONNECTED0));
  TLATX1 dd0_dd2_dd2_q_reg(.G (clk[2]), .D (control[2]), .Q
       (mem_out[8]), .QN (UNCONNECTED1));
  TLATX1 dd0_dd1_dd0_q_reg(.G (clk[1]), .D (control[0]), .Q
       (mem_out[3]), .QN (UNCONNECTED2));
  TLATX1 dd0_dd2_dd1_q_reg(.G (clk[2]), .D (control[1]), .Q
       (mem_out[7]), .QN (UNCONNECTED3));
  TLATX1 dd0_dd1_dd1_q_reg(.G (clk[1]), .D (control[1]), .Q
       (mem_out[4]), .QN (UNCONNECTED4));
  TLATX1 dd0_dd0_dd0_q_reg(.G (clk[0]), .D (control[0]), .Q
       (mem_out[0]), .QN (UNCONNECTED5));
  TLATX1 dd0_dd0_dd2_q_reg(.G (clk[0]), .D (control[2]), .Q
       (mem_out[2]), .QN (UNCONNECTED6));
  TLATX1 dd0_dd2_dd0_q_reg(.G (clk[2]), .D (control[0]), .Q
       (mem_out[6]), .QN (UNCONNECTED7));
endmodule

module top(input0,input1,input2,input3,input4,input5,input6,input7,control0,control1,control2,clk0,clk1,clk2,output0,output1,output2);
input clk0, clk1, clk2;
input control0, control1, control2;
input input0,input1,input2,input3,input4,input5,input6,input7;
output output0, output1, output2;

wire [2:0] clk;
wire [2:0] control;
wire [7:0] inputs;
wire [2:0] outputs;
wire vddc, vddo;
wire vssc, vsso;

commutator dd0(.inputs(inputs),.control(control),.clk(clk),.outputs(outputs));

PADDI pad_clk0(.PAD(clk0), .Y(clk[0]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_clk1(.PAD(clk1), .Y(clk[1]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_clk2(.PAD(clk2), .Y(clk[2]), .VDDIOR(vddo), .VSSIOR(vsso));

PADDI pad_control0(.PAD(control0), .Y(control[0]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_control1(.PAD(control1), .Y(control[0]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_control2(.PAD(control2), .Y(control[0]), .VDDIOR(vddo), .VSSIOR(vsso));

PADDI pad_input0(.PAD(input0), .Y(inputs[0]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input1(.PAD(input1), .Y(inputs[1]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input2(.PAD(input2), .Y(inputs[2]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input3(.PAD(input3), .Y(inputs[3]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input4(.PAD(input4), .Y(inputs[4]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input5(.PAD(input5), .Y(inputs[5]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input6(.PAD(input6), .Y(inputs[6]), .VDDIOR(vddo), .VSSIOR(vsso));
PADDI pad_input7(.PAD(input7), .Y(inputs[7]), .VDDIOR(vddo), .VSSIOR(vsso));

PADDO pad_output0(.A(outputs[0]), .PAD(output0), .VDDIOR(vddo), .VSSIOR(vsso));
PADDO pad_output1(.A(outputs[1]), .PAD(output1), .VDDIOR(vddo), .VSSIOR(vsso));
PADDO pad_output2(.A(outputs[2]), .PAD(output2), .VDDIOR(vddo), .VSSIOR(vsso));

PADVDD pad_vdd1(.VDD(vddc), .VDDIOR(vddo), .VSSIOR(vsso));
PADVDD pad_vdd2(.VDD(vddc), .VDDIOR(vddo), .VSSIOR(vsso));
PADVDD pad_vss1(.VSS(vssc), .VDDIOR(vddo), .VSSIOR(vsso));
PADVDD pad_vss2(.VSS(vssc), .VDDIOR(vddo), .VSSIOR(vsso));

PADVDDIOR pad_vddior(.VDDIOR(vddo), .VSSIOR(vsso));
PADVSSIOR pad_vssior(.VDDIOR(vddo), .VSSIOR(vsso));
endmodule

